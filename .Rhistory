var(new_split_insect$1$treatment)
var(new_split_insect$1$treatment)
var(new_split_insect$1$cover)
var(19,43,20,7,16,2,7,46)
t.test(insect$diversity, insect$cover, paired = TRUE)
titles = ggtitle("Insect Diversity Caught per Canopy Treatment") +
legend.title=element_text(size=20)
box = ggplot(insect, aes(treatment, diversity, fill = treatment)) +
geom_boxplot()+
error +
scale_fill_hue(labels = c("Sagebrush", "Tree Cover")) + ### changes names under legend
guides(fill = guide_legend(title = "Treatment")) + ### changes name OF legend
labs(x="Treatment", y="Diversity") + ### labels of axes
theme_bw() ### theme
line = ggplot(insect, aes(x=cover, y = diversity, col = treatment))+
geom_line()+geom_point(size=2)+
scale_color_manual(labels = c("Sagebrush", "Tree Cover"),values = c("red","royalblue"))+
scale_fill_hue(labels = c("Sagebrush", "Tree Cover"))+
guides(col = guide_legend(title = "Treatment"))+
labs(x="Percent Canopy Cover", y="Diversity")+
ggtitle("Insect Diversity Caught per Canopy Treatment")+
theme(plot.title = element_text(size = 20))+
theme_bw()
line
insect$treatment = as.character(insect$treatment)
box = ggplot(insect, aes(treatment, diversity, fill = treatment)) +
geom_boxplot()+
error +
scale_fill_hue(labels = c("Sagebrush", "Tree Cover")) + ### changes names under legend
guides(fill = guide_legend(title = "Treatment")) + ### changes name OF legend
labs(x="Treatment", y="Diversity") + ### labels of axes
theme_bw() ### theme
error = stat_boxplot(geom = "errorbar", # Error bars
width = 0.25)    # Bars width
box = ggplot(insect, aes(treatment, diversity, fill = treatment)) +
geom_boxplot()+
error +
scale_fill_hue(labels = c("Sagebrush", "Tree Cover")) + ### changes names under legend
guides(fill = guide_legend(title = "Treatment")) + ### changes name OF legend
labs(x="Treatment", y="Diversity") + ### labels of axes
theme_bw() ### theme
box
line
new_split_insect <- split(insect, f = insect$treatment)
insect$treatment = as.character(insect$treatment)
box = ggplot(insect, aes(treatment, diversity, fill = treatment)) +
geom_boxplot()+
error +
scale_fill_hue(labels = c("Sagebrush", "Tree Cover")) + ### changes names under legend
guides(fill = guide_legend(title = "Treatment")) + ### changes name OF legend
labs(x="Treatment", y="Diversity") + ### labels of axes
theme_bw() ### theme
line = ggplot(insect, aes(x=cover, y = diversity, col = treatment))+
geom_line()+geom_point(size=2)+
scale_color_manual(labels = c("Sagebrush", "Tree Cover"),values = c("red","royalblue"))+
scale_fill_hue(labels = c("Sagebrush", "Tree Cover"))+
guides(col = guide_legend(title = "Treatment"))+
labs(x="Percent Canopy Cover", y="Diversity")+
ggtitle("Insect Diversity Caught per Canopy Treatment")+
theme(plot.title = element_text(size = 20))+
theme_bw()
line
write.csv(insect, row.names=FALSE)
write.csv(insect, "Desktop\\insect/csv", row.names=FALSE)
write.csv(insect, "Desktop\\insect.csv", row.names=FALSE)
line = ggplot(insect, aes(x=cover, y = diversity, col = treatment))+
geom_line()+geom_point(size=2)+
scale_color_manual(labels = c("Sagebrush", "Tree Cover"),values = c("red","royalblue"))+
scale_fill_hue(labels = c("Sagebrush", "Tree Cover"))+
guides(col = guide_legend(title = "Treatment"))+
labs(x="Percent Canopy Cover", y="Diversity")+
ggtitle("Insect Diversity Caught per Canopy Treatment")+
theme(plot.title = element_text(size = 20))+
theme_bw()
line
line = ggplot(insect, aes(x=cover, y = diversity, col = treatment))+
geom_point(size=2)+
scale_color_manual(labels = c("Sagebrush", "Tree Cover"),values = c("red","royalblue"))+
scale_fill_hue(labels = c("Sagebrush", "Tree Cover"))+
guides(col = guide_legend(title = "Treatment"))+
labs(x="Percent Canopy Cover", y="Diversity")+
ggtitle("Insect Diversity Caught per Canopy Treatment")+
theme(plot.title = element_text(size = 20))+
theme_bw()
line
line = ggplot(insect, aes(x=cover, y = diversity, col = treatment))+
geom_point(size=2)+
scale_color_manual(labels = c("Sagebrush", "Tree Cover"),values = c("red","royalblue"))+
scale_fill_hue(labels = c("Sagebrush", "Tree Cover"))+
guides(col = guide_legend(title = "Treatment"))+
labs(x="Percent Canopy Cover", y="Diversity")+
ggtitle("Insect Diversity Caught per Canopy Treatment")+
abline(lm(diversity ~ cover))
line = ggplot(insect, aes(x=cover, y = diversity, col = treatment))+
geom_point(size=2)+
scale_color_manual(labels = c("Sagebrush", "Tree Cover"),values = c("red","royalblue"))+
scale_fill_hue(labels = c("Sagebrush", "Tree Cover"))+
guides(col = guide_legend(title = "Treatment"))+
labs(x="Percent Canopy Cover", y="Diversity")+
ggtitle("Insect Diversity Caught per Canopy Treatment")+
abline(lm(diversity ~ cover))+
theme(plot.title = element_text(size = 20))+
theme_bw()
line
line = ggplot(insect, aes(x=cover, y = diversity, col = treatment))+
geom_point(size=2)+
scale_color_manual(labels = c("Sagebrush", "Tree Cover"),values = c("red","royalblue"))+
scale_fill_hue(labels = c("Sagebrush", "Tree Cover"))+
guides(col = guide_legend(title = "Treatment"))+
labs(x="Percent Canopy Cover", y="Diversity")+
ggtitle("Insect Diversity Caught per Canopy Treatment")+
abline(lm(diversity ~ cover))+
theme(plot.title = element_text(size = 20))+
theme_bw()
line
line = ggplot(insect, aes(x=cover, y = diversity, col = treatment))+
geom_point(size=2)+
scale_color_manual(labels = c("Sagebrush", "Tree Cover"),values = c("red","royalblue"))+
scale_fill_hue(labels = c("Sagebrush", "Tree Cover"))+
guides(col = guide_legend(title = "Treatment"))+
labs(x="Percent Canopy Cover", y="Diversity")+
ggtitle("Insect Diversity Caught per Canopy Treatment")+
geom_smooth(method="lm")
line = ggplot(insect, aes(x=cover, y = diversity, col = treatment))+
geom_point(size=2)+
scale_color_manual(labels = c("Sagebrush", "Tree Cover"),values = c("red","royalblue"))+
scale_fill_hue(labels = c("Sagebrush", "Tree Cover"))+
guides(col = guide_legend(title = "Treatment"))+
labs(x="Percent Canopy Cover", y="Diversity")+
ggtitle("Insect Diversity Caught per Canopy Treatment")+
geom_smooth(method="lm")+
theme(plot.title = element_text(size = 20))+
theme_bw()
line
line = ggplot(insect, aes(x=cover, y = diversity, col = treatment))+
geom_point(size=2)+
scale_color_manual(labels = c("Sagebrush", "Tree Cover"),values = c("red","royalblue"))+
scale_fill_hue(labels = c("Sagebrush", "Tree Cover"))+
guides(col = guide_legend(title = "Treatment"))+
labs(x="Percent Canopy Cover", y="Diversity")+
ggtitle("Insect Diversity Caught per Canopy Treatment")+
geom_smooth(method="lm", se = FALSE)+
theme(plot.title = element_text(size = 20))+
theme_bw()
line
line = ggplot(insect, aes(x=cover, y = diversity, col = treatment))+
geom_point(size=2)+
scale_color_manual(labels = c("Sagebrush", "Tree Cover"),values = c("red","royalblue"))+
scale_fill_hue(labels = c("Sagebrush", "Tree Cover"))+
guides(col = guide_legend(title = "Treatment"))+
labs(x="Percent Canopy Cover", y="Diversity")+
ggtitle("Insect Diversity Caught per Canopy Treatment")+
geom_smooth(method="lm", se = FALSE)+
theme(plot.title = element_text(size = 20))+
theme_bw()
plot_grid(line, box,
ncol = 1, nrow = 2)
View(t_test_macro)
model = lm(diversity ~ sample + detritus, data = t_test_macro)
summary(model)
model
model = lm(diversity ~ sample, data = t_test_macro)
model
summary(model)
tree_core = read.csv("bear_basin_snotel_tree_width.csv")
####### tree core data
getwd
####### tree core data
getwd()
tree_core = read.csv("bear_basin_snotel_tree_width.csv")
tree_core = read.csv("homework/bear_basin_snotel_tree_width.csv")
View(tree_core)
names(tree_core)
## graph to compare core width and cum precip
precip = ggplot(tree_core, aes(x=ring_width, y=cum_precip))+
geom_point(size=2)+
labs(x="Core Width (mm)", y="Cumulative Precipitarion")+
geom_smooth(method = "lm", se = FALSE)+
theme_classic()
## graph to compare core width and max swe
swe = ggplot(tree_core, aes(x=ring_width, y=max_swe))+
geom_point(size=2)+
labs(x="Core Width (mm)", y="Maximum Snow Water Equivalent")+
geom_smooth(method = "lm", se = FALSE)+
theme_classic()
## graph to compare core width and temperature
temp = ggplot(tree_core, aes(x=ring_width, y=mean_temp))+
geom_point(size=2)+
labs(x="Core Width (mm)", y="Temperature Mean, Annual (C)")+
geom_smooth(method = "lm", se = FALSE)+
theme_classic()
library(cowplot)
all_together = plot_grid(temp, swe, precip, ncol=3, nrow = 1)
all_together
View(tree_core)
##### multiple regression analysis
model_3 = lm(ring_width ~ mean_temp + cum_precip + snow_disap, data = tree_core)
summary(model_3)
##### multiple regression analysis
model_2 = lm(ring_width ~ mean_temp, data = tree_core)
summary(model_2)
summary(model_3)
##### multiple regression analysis
model_2 = lm(ring_width ~ mean_temp + cum_precip + max_swe, data = tree_core)
summary(model_3)
summary(model_2)
temp
## graph to compare core width and cum precip
precip = ggplot(tree_core, aes(x=ring_width, y=cum_precip))+
geom_point(size=2)+
labs(x="Core Width (mm)", y="Cumulative Precipitarion (cm)")+
geom_smooth(method = "lm", se = FALSE)+
theme_classic()
library(cowplot)
all_together = plot_grid(temp, swe, precip, ncol=3, nrow = 1)
all_together
## graph to compare core width and cum precip
precip = ggplot(tree_core, aes(y=ring_width,x=cum_precip))+
geom_point(size=2)+
labs(y="Core Width (mm)", x="Cumulative Precipitarion (cm)")+
geom_smooth(method = "lm", se = FALSE)+
theme_classic()
## graph to compare core width and temperature
temp = ggplot(tree_core, aes(y=ring_width, x=mean_temp))+
geom_point(size=2)+
labs(y="Core Width (mm)", x="Temperature Mean, Annual (C)")+
geom_smooth(method = "lm", se = FALSE)+
theme_classic()
## graph to compare core width and max swe
swe = ggplot(tree_core, aes(y=ring_width, x=max_swe))+
geom_point(size=2)+
labs(y="Core Width (mm)", x="Maximum Snow Water Equivalent")+
geom_smooth(method = "lm", se = FALSE)+
theme_classic()
library(cowplot)
all_together = plot_grid(temp, swe, precip, ncol=3, nrow = 1)
all_together
# ggplotRegression(lm(Y value ~ X value, data = dataframe))
ggplotRegression(lm(ring_width ~ mean_temp, data = tree_core))
library(ggplot2)
ggplotRegression <- function (fit) {
require(ggplot2)
ggplot(fit$model, aes_string(x = names(fit$model)[2], y = names(fit$model)[1])) +
geom_point() +
stat_smooth(method = "lm", col = "red") +
labs(title = paste("Adj R2 = ",signif(summary(fit)$adj.r.squared, 5),
"Intercept =",signif(fit$coef[[1]],5 ),
" Slope =",signif(fit$coef[[2]], 5),
" P =",signif(summary(fit)$coef[2,4], 5)))
ggplot(fit$model, aes_string(x = names(fit$model)[2], y = names(fit$model)[1])) +
geom_point() +
stat_smooth(method = "lm", col = "red") +
labs(title = paste("Adj R2 = ",signif(summary(fit)$adj.r.squared, 5),
"Intercept =",signif(fit$coef[[1]],5 ),
" Slope =",signif(fit$coef[[2]], 5),
" P =",signif(summary(fit)$coef[2,4], 5)))
)
ggplotRegression <- function (fit) {
require(ggplot2)
ggplot(fit$model, aes_string(x = names(fit$model)[2], y = names(fit$model)[1])) +
geom_point() +
stat_smooth(method = "lm", col = "red") +
labs(title = paste("Adj R2 = ",signif(summary(fit)$adj.r.squared, 5),
"Intercept =",signif(fit$coef[[1]],5 ),
" Slope =",signif(fit$coef[[2]], 5),
" P =",signif(summary(fit)$coef[2,4], 5)))
}
# ggplotRegression(lm(Y value ~ X value, data = dataframe))
ggplotRegression(lm(ring_width ~ mean_temp, data = tree_core))
plot(model_2, 1)
plot(model_2, 2)
View(tree_core)
# ggplotRegression(lm(Y value ~ X value, data = dataframe))
ggplotRegression(lm(ring_width ~ max_swe, data = tree_core))
# ggplotRegression(lm(Y value ~ X value, data = dataframe))
ggplotRegression(lm(ring_width ~ cum_precip, data = tree_core))
plot(model_2, 1)
plot(model_2, 3)
plot(model_2, 2)
plot(model_2, 4)
plot(model_2, 5)
par(mfrow=c(2,2))
plot(model_2)
## graph to compare core width and max swe
swe = ggplot(tree_core, aes(y=ring_width, x=max_swe))+
geom_point(size=2)+
labs(y="Core Width (mm)", x="Maximum SWE (cm)")+
geom_smooth(method = "lm", se = FALSE)+
theme_classic()
all_together = plot_grid(temp, swe, precip, ncol=3, nrow = 1)
all_together
cite()
cite
citation(package = "base")
citation(package = "ggplot2")
citation(package = "cowplot")
head(insect)
error = stat_boxplot(geom = "errorbar", # Error bars
width = 0.25)    # Bars width
View(new_split_insect)
var(new_split_insect$1$cover)
var(new_split_insect$1$cover)
var(19,43,20,7,16,2,7,46)
box = ggplot(insect, aes(treatment, diversity, fill = treatment)) +
geom_boxplot()+
error +
scale_fill_hue(labels = c("Sagebrush", "Tree Cover")) + ### changes names under legend
guides(fill = guide_legend(title = "Treatment")) + ### changes name OF legend
labs(x="Treatment", y="Diversity") + ### labels of axes
theme_bw() ### theme
box
View(plant)
plant$site = as.integer(plant$site)
## scatterplot
ggplot(plant, aes(x=reorder(site,treatment), y=diversity, col = treatment))+
geom_point()+
scale_color_manual(labels=c("Macroinvertebrates","Macrophytes"),values = c("red","royalblue"))+     ## adds the legend according to color of "treatment" category
scale_fill_hue(labels=c("Macroinvertebrates","Macrophytes"))+
guides(col = guide_legend(title = "Treatment"))+
labs(x="Site", y="Diversity Index")+
theme(legend.position = "Left")
summary(split_data$macroinvertebrate$diversity)
var(split_data$macroinvertebrate$diversity)
model = lm(diversity ~ sample, data = t_test_macro)
summary(model)
richness_abundance
summary(split_data[["Macrophyte"]]$diversity)
split_data[["Macroinvertebrate"]]
View(split_data)
## scatterplot
ggplot(plant, aes(x=reorder(site,treatment), y=diversity, col = treatment))+
geom_point()+
scale_color_manual(labels=c("Macroinvertebrates","Macrophytes"),values = c("red","royalblue"))+     ## adds the legend according to color of "treatment" category
scale_fill_hue(labels=c("Macroinvertebrates","Macrophytes"))+
guides(col = guide_legend(title = "Treatment"))+
labs(x="Site", y="Diversity Index")+
theme(legend.position = "Left")
x=reorder(cut,price)
## bar graph
ggplot(data=plant, aes(x=reorder(site,treatment), y=diversity, fill=treatment)) +
geom_bar(stat="identity", color = "black", position=position_dodge())+
scale_fill_manual(values=c("blue3","lightgreen"))+
guides(fill = guide_legend(title = "Sample Type")) +      ### changes name OF legend
labs(x="Site No", y="Diversity Index") +
theme_classic()
## box plt
ggplot(plant, aes(x=treatment, y=diversity))+
geom_boxplot()+
stat_boxplot(geom="errorbar", width = 0.25)+
labs(x="Sample Type", y = "Diversity Index")+
scale_x_discrete(labels=c("Macroinvertebrates","Macrophytes"))+
theme_classic()
head(t_test_macro)
View(t_test_macro)
model = lm(diversity ~ sample, data = t_test_macro)
plot(model, 1)
model
plot(model, 2)
plot(model, 3)
plot(model, 4)
plot(model, 5)
plot(model)
par(2,2)
par(mfrow=c(2,2))
plot(model)
par(mfrow=c(3,3))
plot(model)
plot(model, 4)
par(mfrow=c(2,2))
plot(model)
plot(model,4)
plot(model,1,2)
plot(model,1-2)
plot(model,1:2)
plot(model)
par(mfrow=c(1,1))
plot(model)
par(mfrow=c(2,2))
plot(model)
head(t_test_macro)
model = lm(diversity ~ detritus, data = t_test_macro)
plot(model)
plot(diversity, xlab = "something",ylab = "something else")
plot(diversity, xlab = "Site Number",ylab = "Diversity Index")
plot(model, 4)
par(mfrow=c(2,2))
plot(model, 3)
plot(model, 2)
plot(model, 1)
plot(model, 5)
par(mfrow=c(2,2))
plot(model, 1)
plot(model, 2)
plot(model, 3)
plot(model, 5)
## box plt
ggplot(plant, aes(x=treatment, y=diversity))+
geom_boxplot()+
stat_boxplot(geom="errorbar", width = 0.25)+
labs(x="Sample Type", y = "Diversity Index")+
scale_x_discrete(labels=c("Macroinvertebrates","Macrophytes"))+
theme_classic()
richness = ggplot(test_plant, aes(x=sample, y=richness))+
geom_boxplot()+
labs(x="Sample Type", y="Species Richness")+
theme_classic()
richness = ggplot(test_plant, aes(x=sample, y=richness))+
geom_boxplot()+
labs(x="Sample Type", y="Species Richness")+
par(ces.lab=1.5)+
theme_classic()
richness = ggplot(test_plant, aes(x=sample, y=richness))+
geom_boxplot()+
labs(x="Sample Type", y="Species Richness")+
par(cex.main= "1.5")+
theme_classic()
richness = ggplot(test_plant, aes(x=sample, y=richness))+
geom_boxplot()+
labs(x="Sample Type", y="Species Richness")+
par(cex.main= "1.5")+
theme_classic()
richness = ggplot(test_plant, aes(x=sample, y=richness))+
geom_boxplot()+
labs(x="Sample Type", y="Species Richness")+
par(cex.main= 1.5)+
theme_classic()
abundance = ggplot(test_plant, aes(x=sample, y=abundance))+
geom_boxplot()+
labs(x="Sample Type", y="Species Abundance", size = 10)+
ylim(0,60)+
theme_classic()
abundance
abundance = ggplot(test_plant, aes(x=sample, y=abundance))+
geom_boxplot()+
labs(x="Sample Type", y="Species Abundance")+
ylim(0,60)+
theme_classic()
abundance = ggplot(test_plant, aes(x=sample, y=abundance))+
geom_boxplot()+
labs(x="Sample Type", y="Species Abundance", size = 20)+
ylim(0,60)+
theme_classic()
abundance
abundance = ggplot(test_plant, aes(x=sample, y=abundance))+
geom_boxplot()+
labs(x="Sample Type", y="Species Abundance")+
ylim(0,60)+
theme(axis.title = element_text(size = 14))
abundance
abundance = ggplot(test_plant, aes(x=sample, y=abundance))+
geom_boxplot()+
labs(x="Sample Type", y="Species Abundance")+
ylim(0,60)+
theme(axis.title = element_text(size = 20))
abundance
abundance = ggplot(test_plant, aes(x=sample, y=abundance))+
geom_boxplot()+
labs(x="Sample Type", y="Species Abundance")+
ylim(0,60)+
theme(axis.title = element_text(size = 13))
abundance
abundance = ggplot(test_plant, aes(x=sample, y=abundance))+
geom_boxplot()+
labs(x="Sample Type", y="Species Abundance")+
ylim(0,60)+
theme(text = element_text(size = 13))
abundance
richness = ggplot(test_plant, aes(x=sample, y=richness))+
geom_boxplot()+
labs(x="Sample Type", y="Species Richness")+
par(cex.main= 1.5)+
theme_classic()
richness = ggplot(test_plant, aes(x=sample, y=richness))+
geom_boxplot()+
labs(x="Sample Type", y="Species Richness")+
theme(text = element_text(size = 13))
richness
richness_abundance = plot_grid(richness, abundance, ncol = 2, nrow= 1)
richness_abundance
## box plt
ggplot(plant, aes(x=treatment, y=diversity))+
geom_boxplot()+
stat_boxplot(geom="errorbar", width = 0.25)+
labs(x="Sample Type", y = "Diversity Index")+
scale_x_discrete(labels=c("Macroinvertebrates","Macrophytes"))+
theme(text = element_text(size = 13))
## box plt
ggplot(plant, aes(x=treatment, y=diversity))+
geom_boxplot()+
stat_boxplot(geom="errorbar", width = 0.25)+
labs(x="Sample Type", y = "Diversity Index")+
scale_x_discrete(labels=c("Macroinvertebrates","Macrophytes"))+
theme(text = element_text(size = 15))
model = lm(diversity ~ sample, data = t_test_macro)
summary(model)
par(mfrow=c(2,2))
plot(model, 1)
plot(model, 2)
plot(model, 3)
plot(model, 5)
plot(model, 4)
plot(model, 5)
hats <- as.data.frame(hatvalues(model))
hats
t_test_macro
head(test_plant)
View(test_plant)
richness = ggplot(test_plant, aes(x=sample, y=richness))+
geom_boxplot()+
labs(x="Sample Type", y="Species Richness")+
theme(text = element_text(size = 13))
richness_abundance
